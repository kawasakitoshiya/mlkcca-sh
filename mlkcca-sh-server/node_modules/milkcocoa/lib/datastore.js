function DataStore(t,r){this.milkcocoa=t,this.idGenerator=t.idGenerator,this.path=r}var Stream=require("./streaming"),DataElement=require("./dataelement");module.exports=DataStore,DataStore.prototype.transporter=function(){return this.milkcocoa.transporter},DataStore.prototype.push=function(t,r){var e=this;if(t instanceof Array)throw new Error("params must not be Array");if("object"!=typeof t)throw new Error("params must be object");this.idGenerator.getNextId(function(o,a){var n=e.milkcocoa.get_time();e.transporter().send_operation_request(e.path,"push",{path:e.path,id:a,ts:n,params:JSON.stringify(t)}),r&&r(null,{id:a,value:t,ts:n})})},DataStore.prototype.set=function(t,r){if("string"!=typeof t)throw new Error("id must be string");if(r instanceof Array)throw new Error("params must not be Array");if("object"!=typeof r)throw new Error("params must be object");this.transporter().send_operation_request(this.path,"set",{path:this.path,id:t,params:JSON.stringify(r)})},DataStore.prototype.send=function(t){if("object"!=typeof t)throw new Error("params must be object");this.transporter().send_operation_request(this.path,"send",{path:this.path,params:JSON.stringify(t)})},DataStore.prototype.remove=function(t){if("string"!=typeof t)throw new Error("id must be string");this.transporter().send_operation_request(this.path,"remove",{path:this.path,id:t})},DataStore.prototype.get=function(t,r){if("string"!=typeof t)throw new Error("id must be string");this.transporter().call("get",{path:this.path,id:t},function(t,e){return e.err?void r(e.err):void r(null,DataElement.format(e.content.d))})},DataStore.prototype.get_many=function(t,r){this.transporter().call("get_many",{path:this.path,ids:JSON.stringify(t)},function(t,e){return e.err?void r(e.err):void r(null,e.content.d.map(DataElement.format))})},DataStore.prototype.count=function(t){t(new Error("deprecated"))},DataStore.prototype.stream=function(){return new Stream(this.transporter(),this.path)},DataStore.prototype.on=function(t,r){this.milkcocoa.listeners.add(t,this.path,r),this.transporter().on(this.path,t)},DataStore.prototype.off=function(t){this.milkcocoa.listeners.del(t,this.path),this.transporter().off(this.path,t)},DataStore.prototype.child=function(t){return new DataStore(this.milkcocoa,this.path+"/"+t)};